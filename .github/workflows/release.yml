on:
  workflow_dispatch:

permissions:
  contents: write

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Branch
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          echo "🛠 Vérification de la branche actuelle..."
          CURRENT_BRANCH=${GITHUB_REF_NAME}

          if [ !["$CURRENT_BRANCH" =~ ^release-.*$] ]; then
            echo "❌ Release non autorisée : la branche actuelle ($CURRENT_BRANCH) n'est pas une branche préparée pour des releases"
            exit 1
          fi

          echo "✅ Branche valide : $CURRENT_BRANCH"

      - name: Set up SSH key for GitHub
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.name "Aymen"
          git config --global user.email "aymen330d@hotmail.fr"

      - name: Perform Release
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')                                    
          NEXT_SNAPSHOT_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$2+=1; print $1"."$2"-SNAPSHOT"}')              
          mvn release:prepare -B -DreleaseVersion=$RELEASE_VERSION -DdevelopmentVersion=$NEXT_SNAPSHOT_VERSION            
          mvn release:perform