on:
  workflow_dispatch:

permissions:
  contents: write

jobs:

  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Branch
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          echo "üõ† V√©rification de la branche actuelle..."
          CURRENT_BRANCH=${GITHUB_REF_NAME}

          if [[ "$CURRENT_BRANCH" != "master" && ! "$CURRENT_BRANCH" =~ ^release-.*$ ]]; then
            echo "‚ùå Release non autoris√©e : la branche actuelle ($CURRENT_BRANCH) n'est ni 'master' ni une branche 'release-*'."
            exit 1
          fi

          echo "‚úÖ Branche valide : $CURRENT_BRANCH"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.name "Aymen"
          git config --global user.email "aymen330d@hotmail.fr"

      - name: Perform Release
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        run: |
            # D√©tection de la branche actuelle
            CURRENT_BRANCH=${GITHUB_REF_NAME}
            
            # R√©cup√®re la version actuelle du pom.xml
            CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
            
            # D√©termine les versions
            if [[ "$CURRENT_BRANCH" == "master" ]]; then
              # Sur master, cr√©ation d'une branche de release
              RELEASE_VERSION=$CURRENT_VERSION
            
              # Cr√©er une nouvelle branche de release
              mvn release:branch -DbranchName="release-$RELEASE_VERSION"
            
              # La branche de release sera automatiquement pouss√©e avec la version correcte et le tag sera cr√©√©
              echo "Nouvelle branche de release cr√©√©e : release-$RELEASE_VERSION"
            
            else
              # Sur une branche de release, pas besoin de cr√©er une nouvelle branche
              RELEASE_VERSION=$CURRENT_VERSION
              NEXT_SNAPSHOT_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$2+=1; $3=0; OFS="."; print $1"."$2"."$3"-SNAPSHOT"}')
              echo "Next development version will be $NEXT_SNAPSHOT_VERSION"
          
            # Effectue la release directement sur la branche de release existante
              mvn release:prepare -B -DreleaseVersion=$RELEASE_VERSION -DdevelopmentVersion=$NEXT_SNAPSHOT_VERSION
            fi
            
            echo "Releasing version $RELEASE_VERSION"
            
            mvn release:perform